bool isp(vector<int> &boards, int k,int mid){
    int painterc=1;
    int boardsum=0;
    for(int i=0;i<boards.size();i++){
        if(boardsum+boards[i]<=mid){
              boardsum+=boards[i];
            }
        else{
            painterc++;
            if(painterc>k || boards[i]>mid){
                return false;
            }
           // boardsum=0;
            boardsum=boards[i];
        }
    }
    return true;
}
int findLargestMinDistance(vector<int> &boards, int k)
{
    int s=0;
    int sum=0;
    int n=boards.size();
    for(int i=0;i<n;i++){
        sum+=boards[i];
    }
    int e =sum;
    int ans=-1;
    int mid=s+(e-s)/2;
    while(s<=e){
        if(isp(boards,k,mid)){
            ans=mid;
            e=mid-1; 
        }
           else {
               s=mid+1;
           }
           mid=s+(e-s)/2;
    }
           return ans;
}

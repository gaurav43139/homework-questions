class Solution {
public:
    int firstOcc(vector<int>& nums, int target){
        int s=0;
        int e=nums.size()-1;
        int ans=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums[mid]==target){
                ans=mid;
                e=e-1;
            }
            else if(nums[mid]>target)
                e=e-1;
            else
                s=s+1;
        }
        return ans;
        
    }
     int lastOcc(vector<int>& nums, int target){
        int s=0;
        int e=nums.size()-1;
        int ans=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums[mid]==target){
                ans=mid;
                s=s+1;
            }
            else if(nums[mid]>target)
                e=e-1;
            else
                s=s+1;
        }
        return ans;
        }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> answer;
        answer.push_back(firstOcc( nums,  target));
        answer.push_back(lastOcc( nums, target));
        return answer;
        
        
    }
};
